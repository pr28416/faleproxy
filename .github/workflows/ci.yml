name: Faleproxy CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      deploy_to_production:
        description: 'Deploy to production after preview'
        required: false
        default: false
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      tests_passed: ${{ steps.test_result.outputs.tests_passed }}

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      id: run_tests
      run: npm run test:ci
      
    - name: Set test result output
      id: test_result
      if: ${{ matrix.node-version == '20.x' }} # Only set the output once, using the latest Node version
      run: echo "tests_passed=true" >> $GITHUB_OUTPUT
      
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-node-${{ matrix.node-version }}
        path: coverage/
        
  deploy:
    needs: test
    if: |
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && 
      needs.test.outputs.tests_passed == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
      
    - name: Verify Vercel token
      run: |
        if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
          echo "::error::VERCEL_TOKEN is not set in GitHub secrets. Please add it in the repository settings."
          exit 1
        fi
        echo "Vercel token is configured."
    
    # Create a preview deployment first  
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=preview --token="${{ secrets.VERCEL_TOKEN }}"
      
    - name: Build Project Artifacts (Preview)
      run: vercel build --token="${{ secrets.VERCEL_TOKEN }}"
      
    - name: Create Preview Deployment
      id: preview_deploy
      run: |
        DEPLOY_OUTPUT=$(vercel deploy --token="${{ secrets.VERCEL_TOKEN }}")
        echo "$DEPLOY_OUTPUT"
        PREVIEW_URL=$(echo "$DEPLOY_OUTPUT" | grep -o 'https://.*\.vercel\.app' || echo "Preview URL not found")
        echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT
        echo "::notice::Preview URL: $PREVIEW_URL"
    
    - name: Display Preview URL
      run: |
        echo "📋 Preview deployment complete!"
        echo "🔍 Preview URL: ${{ steps.preview_deploy.outputs.preview_url }}"

    # Only promote to production if explicitly requested
    - name: Deploy to Production
      if: github.event.inputs.deploy_to_production == true
      run: |
        vercel promote --token="${{ secrets.VERCEL_TOKEN }}" ${{ steps.preview_deploy.outputs.preview_url }}
        echo "🚀 Promoted to production!"
